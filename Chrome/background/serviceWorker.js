const r=self,u="local.fakeapi";let d={"/cybertest":{statusCode:200,contentType:"application/json",responseBody:JSON.stringify({message:"Mock API response"}),delay:500,reflectPost:!0}};r.addEventListener("install",e=>{console.log("CyberPost Mock API Service Worker installed"),e.waitUntil(r.skipWaiting())});r.addEventListener("activate",e=>{console.log("CyberPost Mock API Service Worker activated"),e.waitUntil(r.clients.claim())});const c=e=>({"Content-Type":e,"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, PUT, DELETE, PATCH","Access-Control-Allow-Headers":"Content-Type, Authorization","X-Powered-By":"CyberPost Mock API","X-Mock-Response":"true"});r.addEventListener("message",e=>{if(e.data&&e.data.type==="configure-mock"){const{endpoint:n,config:o}=e.data;n&&o?(d[n]=o,e.ports[0].postMessage({status:"success",message:"Mock API configured"})):e.ports[0].postMessage({status:"error",message:"Invalid configuration"})}});r.addEventListener("fetch",e=>{const n=new URL(e.request.url);n.hostname===u&&e.respondWith((async()=>{try{const o=n.pathname;let s=d[o];if(!s)return new Response(JSON.stringify({error:"No mock configuration for this endpoint"}),{status:404,headers:c("application/json")});let a=null;if(e.request.method==="POST"&&s.reflectPost)try{const t=e.request.clone(),l=e.request.headers.get("content-type")||"";if(l.includes("application/json"))a=await t.json();else if(l.includes("application/x-www-form-urlencoded")){const p=await t.formData();a=Object.fromEntries(p)}else a=await t.text()}catch(t){console.error("Error processing request body:",t)}s.delay&&await new Promise(t=>setTimeout(t,s.delay));let i=s.responseBody;if(s.reflectPost&&a)try{const t=typeof i=="string"?JSON.parse(i):i;t.request={body:a,method:e.request.method,headers:Object.fromEntries(Array.from(e.request.headers.entries())),url:e.request.url},i=JSON.stringify(t)}catch(t){console.error("Error reflecting request body:",t)}return new Response(i,{status:s.statusCode,headers:c(s.contentType)})}catch(o){return console.error("Error in mock API:",o),new Response(JSON.stringify({error:"Mock API error",details:o.message}),{status:500,headers:c("application/json")})}})())});
